<%= render 'glyphicon_links' %>
<%= render 'videos/nav' %>

  <%= simple_form_for @video do |f| %>
    <%= render 'shared/errors', object: @video %>

      <div class="container-fluid">
          <div class = "col-sm-12">
          
          <% if !user_signed_in? %>
          <div class="text-center">
            
            <h4><strong><i>WARNING - This is a trial session. You may use the application but your notes will NOT be saved until you sign in</i></strong> </h4>
          </div>

          <% end %>

          <br />

            <!-- LEFT side-->
            <div class="col-sm-6">

                <div class="form-group" id="button">

                  <%= f.text_field :link, id:'input_area', class: 'form-control', placeholder:"Paste YouTube Link Here", required: true %>
                </div>

                <button type="button" class="btn btn-primary" id="button_sbmt">Input Video</button>

            <!-- Puts the video into the IFrame -->
            <div id="player"></div>


             <!-- Video Rating -->
             <div id="star-rating"><strong>Rate it!</strong> &nbsp;</div>
          
            <br />
            <br />  
            <br />
             <!-- Video Review section -->
             <%= f.text_area :review, :cols=>"80",:rows=>"5", :placeholder=>"Write a Review" %>

            </div>

            <!-- RIGHT SIDE -->
            <div id="right_side" class="col-sm-6">

          
                  <%= f.text_area :note,:id=>"tinymce", :rows => "20", :cols => "80" %>

          

               <br />
              
           
          <% if current_user %>
            <p><strong>Choose a Category</strong></p>
           <%= collection_select(:video, :subject_id, @subject, :id, :subject, {:default=>true}, { :multiple => false}) %>

           <% else %>
              <p><strong><i>Sign Up or Login to place your video into a category</i></strong></p>

           <% end %>

               <br />
               <br />
          
     <!--        <div class="save_to_local">
                  <span><strong>Save to computer</strong></span>&nbsp;
                    <button id="create" type="button" class="btn btn-primary">
                      <span class="glyphicon glyphicon-save"></span>
                    </button>
              
                % if @video %
                  <a download="<%= @video.title %>.txt" id="downloadlink" style="display: none">Download</a>
                % else %
                  <a download="VidEdu_Notes.txt" id="downloadlink" style="display: none">Download</a>
                % end %

                </div> -->
                

            <!--     % if current_user %
                  %= check_box(:is_public, 1) %
                  %= label_tag(:is_public, "Public Video?") %
                  <p><i>Public videos will show your notes to other users</i></p>
                % end% -->
              
                <%= f.text_area :note_summary, :size => "80x10", :placeholder=>"Write a Summary/Description", id:"summary_area"%>


                <div>       

                  <% if current_user %>
                   <%= f.submit 'Save', class: 'btn btn-primary', :id=>'save_btn' %>
                   <%= link_to 'See Videos', videos_path, class: 'btn btn-primary', :id=>"back" %>

                  <% else %>
                   <%= link_to "Sign Up!", new_user_registration_path,class: 'btn btn-primary',:id=>'save_btn' %>
                   <%= link_to 'See Featured', pages_featured_path, class: 'btn btn-primary', :id=>"back" %>
                  <% end %>

                </div>

                <br />
                <br />
                <br />

            </div>

          </div>
      </div>

  <% end %>



  <script>



// if (window.location.href.indexOf('reload')==-1) {
//      window.location.replace(window.location.href+'?reload');
// }


      $('#star-rating').raty({
        path: '/assets/',
        scoreName: 'video[rating]'
      });
    

 



        tinyMCE.init({

        selector: "#tinymce",
     
        setup: function(editor) {

                editor.on('keydown', function(args) {

                        // pause only with letters
                        if(args.keyCode > 65 && args.keyCode < 90){
                          player.pauseVideo();
                        } else if (args.keyCode == 13){
                          player.playVideo();
                          bool_val = true;
                        }
                

                        if (bool_val) {
                            append_timestamp(player.getCurrentTime());
                            bool_val = false;
                         }
                    

                 

                    content = tinyMCE.activeEditor.getContent();

                }); //end editor


            } // END SETUP

    });



        $("#button_sbmt").click(function () {

            console.log(URL);

            URL = document.getElementById("input_area").value;
            parse_embeded_code(URL);
            get_embeded_code();
            youTubeIframeAPIReady();

    
    });

    
  function parse_embeded_code(URL) {
        embeded_url_code = URL.split("=").pop();

    }

    function get_embeded_code() {
        video_id = embeded_url_code;
        //document.getElementById("ytplayer").src="http://www.youtube.com/embed/"+embeded_url_code+"?autoplay=0";
    }

    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
 


    function youTubeIframeAPIReady() {
        console.log(video_id);

        player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: video_id
            
        });
    }



    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }









    var URL;
    var embeded_url_code;
    var video_id;
    var player;
    var i = 0;

    var bool_val = false;
    var content;
    var summary_content;
    var review_content;
    var youtube_url;
    var save;





    function append_timestamp(time) {
        
        console.log(time);
        
        $('#timestamp').append("<p><a href='#' onclick=playerSeekTo(player," + time + ")>" + time.toFixed(2) + "</a></p>");
        
        var seconds = time.toFixed(0);
        console.log("Cut down time: " + seconds);

        // TODO: in the href, put the youtube video and it's current time in there!!!
       // tinyMCE.activeEditor.$("p").prepend
       // ("<a href='https://youtu.be/"+video_id+"?t="+seconds+"s'onclick=playerSeekTo(player," + time + ")>"+ time.toFixed(2) + "s</a>: ");

       // tinyMCE.activeEditor.$("p").prepend
       // ("<a href='javascript:getTimestamp();', onclick=playerSeekTo(player," + time + "), id=timestamp_note>"+ time.toFixed(2) + "s</a>: ");


      tinyMCE.activeEditor.$("p").prepend
       ("<a href='#' class='timestamp_note'><strong>"+ time.toFixed(0) + "s</strong></a>: ");

        

    }
        function playerSeekTo(player, seconds) {
        player.seekTo(seconds);
    }


// saving notes to local machine
    $('#create').click(function(){
        content = tinyMCE.activeEditor.getContent({format : 'text'});
        console.log(content); 
      });
  var textFile = null,
  makeTextFile = function (text) {
      var data = new Blob([content], {type: 'text/plain'});
      // If we are replacing a previously generated file we need to
      // manually revoke the object URL to avoid memory leaks.
      if (textFile !== null) {
        window.URL.revokeObjectURL(textFile);
      }
      textFile = window.URL.createObjectURL(data);
      return textFile;
  };
  var create = document.getElementById('create'),
    textbox = content;
  create.addEventListener('click', function () {
      var link = document.getElementById('downloadlink');
      link.href = makeTextFile(textbox);
      link.style.display = 'block';
  }, false);



  </script>